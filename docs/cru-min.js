const $cru=t=>document.querySelector(t),$crus=t=>document.querySelectorAll(t),$cruConfig={prefix_url:"",headers:{"Content-Type":"application/json"},callbacks:{}},$C=(t=!1)=>{if(t)for(let e of Object.keys(t))$cruConfig[e]=t[e];$cruLoadEvents()},$cruLoadEvents=()=>{$cruLoadRequests(),$cruLoadFormIntercept(),$cruLoadAllContainers()},$cruLoadContainer=async t=>{t.classList.add("loaded");const e=t.closest("[c-container]")||t,c=e.getAttribute("c-container"),r=e.getAttribute("c-target")||!1,a=e.getAttribute("c-type")||"html",n=e.getAttribute("c-callback")||!1,o=await fetch($cruConfig.prefix_url+c,{method:"GET",headers:$cruConfig.headers}),s=await $cruTypeResponse(a,o),i=r?$cru(r):e;(r||"off"!=r)&&(r?i.innerHTML=$cruHTML(s):"html"==a&&(i.innerHTML=$cruHTML(s))),n&&$cruConfig.callbacks[n](s,i),$cruLoadEvents()},$cruLoadAllContainers=async()=>{$crus("[c-container]:not(.loaded)").forEach(async t=>{t.classList.add("loaded"),$cruLoadContainer(t)}),$crus("[c-reload]:not(.loaded)").forEach(async t=>{t.classList.add("loaded"),t.addEventListener("click",e=>$cruLoadContainer(t))})},cruRequest=async(t,e)=>{const c=t.getAttribute(`c-${e}`),r=t.getAttribute("c-type")||"html",a=t.getAttribute("c-reload-container")||!1,n=t.getAttribute("c-remove-closest")||!1,o=t.getAttribute("c-swap")||!1,s=t.getAttribute("c-callback")||!1,i=t.getAttribute("c-target")||!1,u=await fetch($cruConfig.prefix_url+c,{method:e,headers:$cruConfig.headers}),d=await $cruTypeResponse(r,u),l=!!i&&$cru(i);n&&t.closest(n).remove(),o&&($cru(o).outerHTML=d),a&&$cruLoadContainer(t),l&&(l?l.innerHTML=$cruHTML(d):"html"==r&&(t.innerHTML=$cruHTML(d))),s&&$cruConfig.callbacks[s](d,l),$cruLoadEvents()},$cruLoadRequests=()=>{$crus("[c-delete]:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("click",async e=>{cruRequest(t,"delete")})}),$crus("[c-put]:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("click",async e=>{cruRequest(t,"put")})}),$crus("[c-get]:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("click",async e=>{cruRequest(t,"get")})}),$crus("[c-post]:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("click",async e=>{cruRequest(t,"post")})})},$cruLoadFormIntercept=()=>{$crus(".c-form:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("submit",async e=>{e.preventDefault();const c=t.getAttribute("action"),r=t.getAttribute("method").toUpperCase()||"POST",a=t.getAttribute("c-type")||"html",n=t.getAttribute("c-append")||!1,o=t.getAttribute("c-swap")||!1,s=t.getAttribute("c-target")||!1,i=t.getAttribute("c-reload-container")||!1,u=t.getAttribute("c-callback")||!1,d=$cruIsRead(r),l=Object.fromEntries(new FormData(e.target).entries()),$=cruFormatURL(c,d,l),L=await fetch($,{method:r,headers:$cruConfig.headers,body:d?null:JSON.stringify(l)}),p=await $cruTypeResponse(a,L);o&&($cru(o).outerHTML=$cruHTML(p)),n&&$cru(n).insertAdjacentHTML("beforeend",p),s&&($cru(s).innerHTML=$cruHTML(p)),i&&$cruLoadContainer(t),u&&$cruConfig.callbacks[u](p,t),$cruLoadEvents()})})},cruFormatURL=(t,e,c)=>{let r=$cruConfig.prefix_url+t;if(e)try{r=new URL(t)}catch(e){try{r=new URL(window.location.origin+t)}catch(e){throw t}}finally{r.search=new URLSearchParams(c).toString(),r=r.href}return r},$cruCallback=(t,e)=>{$cruConfig.callbacks[t]=e},$cruHTML=html=>{const tempDiv=document.createElement("span");tempDiv.innerHTML=html;const script=tempDiv.querySelector("script");let htmlSemScript=tempDiv.innerHTML;return script&&(htmlSemScript=htmlSemScript.replace(script.outerHTML,""),eval(script.textContent)),htmlSemScript},$cruIsRead=t=>["GET","HEAD"].includes(t),$cruTypeResponse=async(t,e)=>"html"==t?await e.text():await e.json();$C();