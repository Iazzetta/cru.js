const $cru=t=>document.querySelector(t),$crus=t=>document.querySelectorAll(t),$cruConfig={prefix_url:"",headers:{"Content-Type":"application/json"},callbacks:{}},$C=(t=!1)=>{if(t)for(let e of Object.keys(t))$cruConfig[e]=t[e];$cruLoadEvents()},$cruLoadEvents=()=>{$cruLoadRequests(),$cruLoadFormIntercept(),$cruLoadAllContainers()},$cruLoadContainer=async t=>{t.classList.add("loaded");const e=t.closest("[c-container]")||t,r=e.getAttribute("c-container"),c=e.getAttribute("c-target")||!1,a=e.getAttribute("c-type")||"html",n=e.getAttribute("c-callback")||!1,o=await fetch($cruConfig.prefix_url+r,{method:"GET",headers:$cruConfig.headers}),s=await $cruTypeResponse(a,o),i=c?$cru(c):e;(c||"off"!=c)&&(c?i.innerHTML=s:"html"==a&&(i.innerHTML=s)),n&&$cruConfig.callbacks[n](s,i),$cruLoadEvents()},$cruLoadAllContainers=async()=>{$crus("[c-container]:not(.loaded)").forEach(async t=>{t.classList.add("loaded"),$cruLoadContainer(t)}),$crus("[c-reload]:not(.loaded)").forEach(async t=>{t.classList.add("loaded"),t.addEventListener("click",e=>$cruLoadContainer(t))})},cruRequest=async(t,e)=>{const r=t.getAttribute(`c-${e}`),c=t.getAttribute("c-type")||"html",a=t.getAttribute("c-reload-container")||!1,n=t.getAttribute("c-remove-closest")||!1,o=t.getAttribute("c-redirect")||!1,s=t.getAttribute("c-swap")||!1,i=form.getAttribute("c-append")||!1,d=form.getAttribute("c-prepend")||!1,u=t.getAttribute("c-callback")||!1,l=t.getAttribute("c-target")||!1,$=await fetch($cruConfig.prefix_url+r,{method:e,headers:$cruConfig.headers}),g=await $cruTypeResponse(c,$),f=!!l&&$cru(l);n&&t.closest(n).remove(),s&&($cru(s).outerHTML=g),i&&$cru(i).insertAdjacentHTML("beforeend",g),d&&$cru(d).insertAdjacentHTML("afterbegin",g),a&&$cruLoadContainer(t),f&&(f?f.innerHTML=g:"html"==c&&(t.innerHTML=g)),u&&$cruConfig.callbacks[u](g,f),$cruLoadEvents(),o&&(window.location.href=o)},$cruLoadRequests=()=>{$crus("[c-delete]:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("click",async e=>{cruRequest(t,"delete")})}),$crus("[c-put]:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("click",async e=>{cruRequest(t,"put")})}),$crus("[c-get]:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("click",async e=>{cruRequest(t,"get")})}),$crus("[c-post]:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("click",async e=>{cruRequest(t,"post")})})},$cruLoadFormIntercept=()=>{$crus(".c-form:not(.loaded)").forEach(t=>{t.classList.add("loaded"),t.addEventListener("submit",async e=>{e.preventDefault();const r=t.getAttribute("action"),c=t.getAttribute("method").toUpperCase()||"POST",a=t.getAttribute("c-type")||"html",n=t.getAttribute("c-append")||!1,o=t.getAttribute("c-prepend")||!1,s=t.getAttribute("c-redirect")||!1,i=t.getAttribute("c-reset")||!1,d=t.getAttribute("c-swap")||!1,u=t.getAttribute("c-target")||!1,l=t.getAttribute("c-reload-container")||!1,$=t.getAttribute("c-callback")||!1,g=$cruIsRead(c),f=Object.fromEntries(new FormData(e.target).entries()),L=cruFormatURL(r,g,f),b=await fetch(L,{method:c,headers:$cruConfig.headers,body:g?null:JSON.stringify(f)}),p=await $cruTypeResponse(a,b);d&&($cru(d).outerHTML=p),n&&$cru(n).insertAdjacentHTML("beforeend",p),o&&$cru(o).insertAdjacentHTML("afterbegin",p),u&&($cru(u).innerHTML=p),i&&t.reset(),l&&$cruLoadContainer(t),$&&$cruConfig.callbacks[$]({status:b.status,data:p},t),$cruLoadEvents(),s&&(window.location.href=s)})})},cruFormatURL=(t,e,r)=>{let c=$cruConfig.prefix_url+t;if(e)try{c=new URL(t)}catch(e){try{c=new URL(window.location.origin+t)}catch(e){throw t}}finally{c.search=new URLSearchParams(r).toString(),c=c.href}return c},$cruCallback=(t,e)=>{$cruConfig.callbacks[t]=e},$cruIsRead=t=>["GET","HEAD"].includes(t),$cruTypeResponse=async(t,e)=>"html"==t?await e.text():await e.json();$C();